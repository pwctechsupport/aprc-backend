
!!!
%html
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %meta{:charset => "utf-8"}/
    %meta{:content => "IE=edge", "http-equiv" => "X-UA-Compatible"}/
    %title Report Control Without Risk
    :css
      input[type=checkbox]{
      \/* Double-sized Checkboxes */
      \-ms-transform: scale(3.5); /* IE */
      \-moz-transform: scale(3.5); /* FF */
      \-webkit-transform: scale(3.5); /* Safari and Chrome */
      \-o-transform: scale(3.5); /* Opera */
      transform: scale(3.5);
      padding: 1px;}
    :css
      .table.table-borderless {border:10px !important;}
      .risk {margin-top:15px;}
      hr.new5 {
      border: 2px solid #D85604;
      border-radius: 5px;}
      th,td{max-width: 50%;}

      
    :css
      .apo{font-size:13px;}
      th{font-size:14px;}
      td{font-size:13px;}
      .tab{ margin-left:40px;}
      .ape{%font-size:24px; text-align:left;}
      .aps{font-size:20px;}
      .aha{border:none;}

    :css
      span {position:relative; bottom:1.7px; background:#F32013; border-radius:6px; font-size:15px; color:white; font-family:Arial; text-shadow: 0.5px 0.5px black; padding:1px 5px 4px;}
    

    %table.table.table-borderless.aha{style:"display:block;"}
      %tr.aha
        %td.aha Printed On
        %td.aha :
        %td.aha #{Time.now.strftime("%d %B %Y")}
        

      %tr.aha
        %td.aha Printed By
        %td.aha :
        %td.aha= current_user&.name
    %h1.text-center.aps Report Control Without Risk
    %h2.ape 
    
    
    -# %table.table.table-border
    -#   %thead
    -#     %tr
    -#       %th{:scope => "col"} Risk Name
    -#       %th{:scope => "col"} Level of Risk
    -#       %th{:scope => "col"} Type of Risk
    -#       %th{:scope => "col"} Business Process
    -#   %tbody
    -#     %tr
    -#       %td #{ris.name}
    -#       %td #{ris.level_of_risk.to_s.gsub(/_/, ' ').titlecase}
    -#       %td #{ris.type_of_risk.to_s.gsub(/_/, ' ').titlecase}
    -#       %td #{ris.business_process.name.capitalize}
    -# %br
    
    %table.table.table-borderless
      %thead
        %tr
          %th.text-center{:scope => "col"} #
          %th.text-center{:scope => "col"} Description
          %th.text-center{:scope => "col"} Type of Control
          %th.text-center{:scope => "col"} Control Owner
          %th.text-center{:scope => "col"} Frequency
          %th.text-center{:scope => "col"} Nature
          %th.text-center{:scope => "col"} Assertion
          %th.text-center{:scope => "col"} Ipo
          %th.text-center{:scope => "col"} Status
          %th.text-center{:scope => "col"} Related Policy
          %th.text-center{:scope => "col"} Business Process 
          %th.text-center{:scope => "col"} Key Control
      -z = 1
      -@controls.each do |con|
        -if con.business_processes.present?
          -con&.business_processes.each do |bis|
            -if con.policies.present?
              -con.policies.each do |pol|
                %tbody
                  %tr
                    %td.text-center{:scope => "row"} #{z}
                    %td.text-center{:scope => "row"} #{con&.description&.titlecase&.html_safe}
                    %td.text-center #{con.type_of_control.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                    %td.text-center #{con.control_owner.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                    %td.text-center #{con.frequency.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                    %td.text-center #{con.nature.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                    %td
                      -if con.assertion.count > 1
                        .apo  
                          %ul
                            -con.assertion.each do |cop|
                              %li=cop.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                      -elsif con.assertion.count == 1
                        %ul
                          %li=con.assertion.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                    %td
                      -if con.ipo.count > 1
                        .apo  
                          %ul
                            -con.ipo.each do |cop|
                              %li=cop.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                      -elsif con.ipo.count == 1
                        %ul
                          %li=con.ipo.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                    %td.text-center #{con.status.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase}
                    %td.text-center #{pol&.title&.titlecase&.html_safe}
                    %td.text-center #{bis&.name}
                    %td 
                      -if con&.key_control == true
                        .risk.text-center
                          %input#checkboxG5.css-checkbox{:checked => "checked", :name => "checkboxG5", :type => "checkbox"}/
                          %label.css-label{:for => "checkboxG5"}
                      -else
                        .risk.text-center
                          %input#checkboxG4.css-checkbox{:name => "checkboxG4", :type => "checkbox"}/
                          %label.css-label{:for => "checkboxG4"}
                    -z+=1
            -else
              %tbody
                %tr
                  %td.text-center{:scope => "row"} #{z}
                  %td.text-center{:scope => "row"} #{con&.description&.titlecase&.html_safe}
                  %td.text-center #{con.type_of_control.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                  %td.text-center #{con.control_owner.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                  %td.text-center #{con.frequency.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                  %td.text-center #{con.nature.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                  %td
                    -if con.assertion.count > 1
                      .apo  
                        %ul
                          -con.assertion.each do |cop|
                            %li=cop.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                    -elsif con.assertion.count == 1
                      %ul
                        %li=con.assertion.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                  %td
                    -if con.ipo.count > 1
                      .apo  
                        %ul
                          -con.ipo.each do |cop|
                            %li=cop.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                    -elsif con.ipo.count == 1
                      %ul
                        %li=con.ipo.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                  %td.text-center #{con.status.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase}
                  %td.text-center No Related Policies
                  %td.text-center #{bis&.name}
                  %td 
                    -if con&.key_control == true
                      .risk.text-center
                        %input#checkboxG5.css-checkbox{:checked => "checked", :name => "checkboxG5", :type => "checkbox"}/
                        %label.css-label{:for => "checkboxG5"}
                    -else
                      .risk.text-center
                        %input#checkboxG4.css-checkbox{:name => "checkboxG4", :type => "checkbox"}/
                        %label.css-label{:for => "checkboxG4"}
                  -z+=1
        -else
          -if con.policies.present?
            -con.policies.each do |pol|
              %tbody
                %tr
                  %td.text-center{:scope => "row"} #{z}
                  %td.text-center{:scope => "row"} #{con&.description&.titlecase&.html_safe}
                  %td.text-center #{con.type_of_control.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                  %td.text-center #{con.control_owner.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                  %td.text-center #{con.frequency.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                  %td.text-center #{con.nature.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                  %td
                    -if con.assertion.count > 1
                      .apo  
                        %ul
                          -con.assertion.each do |cop|
                            %li=cop.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                    -elsif con.assertion.count == 1
                      %ul
                        %li=con.assertion.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                  %td
                    -if con.ipo.count > 1
                      .apo  
                        %ul
                          -con.ipo.each do |cop|
                            %li=cop.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                    -elsif con.ipo.count == 1
                      %ul
                        %li=con.ipo.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                  %td.text-center #{con.status.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase}
                  %td.text-center #{pol&.title&.titlecase&.html_safe}
                  %td.text-center No Business Process
                  %td 
                    -if con&.key_control == true
                      .risk.text-center
                        %input#checkboxG5.css-checkbox{:checked => "checked", :name => "checkboxG5", :type => "checkbox"}/
                        %label.css-label{:for => "checkboxG5"}
                    -else
                      .risk.text-center
                        %input#checkboxG4.css-checkbox{:name => "checkboxG4", :type => "checkbox"}/
                        %label.css-label{:for => "checkboxG4"}
                  -z+=1
          -else
            %tbody
              %tr
                %td.text-center{:scope => "row"} #{z}
                %td.text-center{:scope => "row"} #{con&.description&.titlecase&.html_safe}
                %td.text-center #{con.type_of_control.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                %td.text-center #{con.control_owner.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                %td.text-center #{con.frequency.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                %td.text-center #{con.nature.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase.html_safe}
                %td
                  -if con.assertion.count > 1
                    .apo  
                      %ul
                        -con.assertion.each do |cop|
                          %li=cop.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                  -elsif con.assertion.count == 1
                    %ul
                      %li=con.assertion.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                %td
                  -if con.ipo.count > 1
                    .apo  
                      %ul
                        -con.ipo.each do |cop|
                          %li=cop.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                  -elsif con.ipo.count == 1
                    %ul
                      %li=con.ipo.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase
                %td.text-center #{con.status.to_s.gsub(/[^0-9A-Za-z]/, ' ').titlecase}
                %td.text-center No Related Policies
                %td.text-center No Business Process
                %td 
                  -if con&.key_control == true
                    .risk.text-center
                      %input#checkboxG5.css-checkbox{:checked => "checked", :name => "checkboxG5", :type => "checkbox"}/
                      %label.css-label{:for => "checkboxG5"}
                  -else
                    .risk.text-center
                      %input#checkboxG4.css-checkbox{:name => "checkboxG4", :type => "checkbox"}/
                      %label.css-label{:for => "checkboxG4"}
                -z+=1
    %br
    %br




  / %p{:style => "page-break-after:always;"}
  / / %p{:style => "page-break-after:auto;"}

