
wb = xlsx_package.workbook


content = wb.styles.add_style(:bg_color => "FFFFFFFF",
  :fg_color=>"#FF000000",
  :border=>Axlsx::STYLE_THIN_BORDER,
  :alignment=>{:horizontal => :center, :vertical => :center})


header = wb.styles.add_style(:sz => 12, :bg_color => 'b10015', :fg_color => 'FF', :b => true, :border => { :style => :thin, :color => "00000000", :edges => [:top, :bottom, :left, :right] }, :alignment=>{:horizontal => :center, :vertical => :center})



wb.add_worksheet(name: "Exception Report") do |sheet|
  # Create the header row
  head = sheet.add_row ["Business Process", "Name of control","Type of control","Control Owner", "Frequency", "Nature", "Assertion", "Ipo", "Key control"], :style => header, :height => 25
  # Create entries for each item
  new_tag = @tags.pluck(:business_process_id).map{|x| Tag.where.not(control_id:nil).find_by(business_process_id: x)}
  new_tag.uniq.each do |tag|
    unmapped_control = tag.business_process.control_ids
    total_control = @tags.where(business_process_id: tag.business_process_id).map{|x| x.control_id}
    unmapped_control.reject!{|x| total_control.include?(x)}
    if unmapped_control.count != 0
      unmapped_control.uniq.each do |unmapped|
        con = Control.find(unmapped)
        sheet.add_row [
          tag.business_process&.name&.capitalize, 
          con&.description.capitalize, 
          con.type_of_control.present? ? con.type_of_control.to_s.gsub("_", ' ').capitalize : "", 
          con.control_owner.present? ? con.control_owner.join(", ").to_s.gsub("_", ' ').titlecase : "", 
          con&.frequency&.to_s&.gsub("_", ' ').capitalize.html_safe, 
          con&.nature&.to_s&.gsub("_", ' ').capitalize, 
          con.convert_assertion.join(","), 
          con.convert_ipo.join(","),
          con&.key_control
        ], :style=>content, :height => 22
      end
    end
  end
end

